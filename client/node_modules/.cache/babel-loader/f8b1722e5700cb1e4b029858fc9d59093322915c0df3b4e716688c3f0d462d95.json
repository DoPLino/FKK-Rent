{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor to handle errors\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2, _error$response2$data;\n  // Handle authentication errors\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n\n  // Handle other errors\n  if ((_error$response2 = error.response) !== null && _error$response2 !== void 0 && (_error$response2$data = _error$response2.data) !== null && _error$response2$data !== void 0 && _error$response2$data.message) {\n    console.error('API Error:', error.response.data.message);\n  }\n  return Promise.reject(error);\n});\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', {\n    email,\n    password\n  }),\n  register: userData => api.post('/auth/register', userData),\n  getMe: () => api.get('/auth/me'),\n  updateProfile: profileData => api.put('/auth/me', profileData),\n  changePassword: (currentPassword, newPassword) => api.put('/auth/change-password', {\n    currentPassword,\n    newPassword\n  }),\n  refreshToken: () => api.post('/auth/refresh'),\n  logout: () => api.post('/auth/logout'),\n  forgotPassword: email => api.post('/auth/forgot-password', {\n    email\n  }),\n  resetPassword: (resetToken, newPassword) => api.post('/auth/reset-password', {\n    resetToken,\n    newPassword\n  })\n};\n\n// Equipment API\nexport const equipmentAPI = {\n  getAll: params => api.get('/equipment', {\n    params\n  }),\n  getById: id => api.get(`/equipment/${id}`),\n  getByQR: qrCode => api.get(`/equipment/qr/${qrCode}`),\n  create: equipmentData => api.post('/equipment', equipmentData),\n  update: (id, equipmentData) => api.put(`/equipment/${id}`, equipmentData),\n  delete: id => api.delete(`/equipment/${id}`),\n  updateStatus: (id, status) => api.patch(`/equipment/${id}/status`, {\n    status\n  }),\n  addMaintenance: (id, maintenanceData) => api.post(`/equipment/${id}/maintenance`, maintenanceData),\n  getStats: () => api.get('/equipment/stats/overview'),\n  generateQR: id => api.get(`/equipment/${id}/qr`)\n};\n\n// Booking API\nexport const bookingAPI = {\n  getAll: params => api.get('/bookings', {\n    params\n  }),\n  getById: id => api.get(`/bookings/${id}`),\n  create: bookingData => api.post('/bookings', bookingData),\n  update: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\n  delete: id => api.delete(`/bookings/${id}`),\n  checkOut: id => api.post(`/bookings/${id}/checkout`),\n  checkIn: (id, checkInData) => api.post(`/bookings/${id}/checkin`, checkInData),\n  cancel: (id, reason) => api.post(`/bookings/${id}/cancel`, {\n    reason\n  }),\n  getStats: () => api.get('/bookings/stats/overview')\n};\n\n// User API\nexport const userAPI = {\n  getAll: params => api.get('/users', {\n    params\n  }),\n  getById: id => api.get(`/users/${id}`),\n  create: userData => api.post('/users', userData),\n  update: (id, userData) => api.put(`/users/${id}`, userData),\n  delete: id => api.delete(`/users/${id}`),\n  updateRole: (id, role) => api.patch(`/users/${id}/role`, {\n    role\n  }),\n  getStats: () => api.get('/users/stats/overview')\n};\n\n// Location API\nexport const locationAPI = {\n  getAll: params => api.get('/locations', {\n    params\n  }),\n  getById: id => api.get(`/locations/${id}`),\n  create: locationData => api.post('/locations', locationData),\n  update: (id, locationData) => api.put(`/locations/${id}`, locationData),\n  delete: id => api.delete(`/locations/${id}`),\n  getStats: () => api.get('/locations/stats/overview')\n};\n\n// QR API\nexport const qrAPI = {\n  generateQR: id => api.get(`/qr/equipment/${id}`),\n  scanQR: qrData => api.post('/qr/scan', qrData),\n  bulkGenerate: equipmentIds => api.post('/qr/bulk-generate', {\n    equipmentIds\n  })\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => api.get('/health')\n};\nexport default api;","map":{"version":3,"names":["axios","api","create","baseURL","process","env","REACT_APP_API_URL","timeout","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$response2$data","status","removeItem","window","location","href","data","message","console","authAPI","login","email","password","post","register","userData","getMe","get","updateProfile","profileData","put","changePassword","currentPassword","newPassword","refreshToken","logout","forgotPassword","resetPassword","resetToken","equipmentAPI","getAll","params","getById","id","getByQR","qrCode","equipmentData","update","delete","updateStatus","patch","addMaintenance","maintenanceData","getStats","generateQR","bookingAPI","bookingData","checkOut","checkIn","checkInData","cancel","reason","userAPI","updateRole","role","locationAPI","locationData","qrAPI","scanQR","qrData","bulkGenerate","equipmentIds","healthAPI","check"],"sources":["/Users/lino/Downloads/test/client/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_API_URL || 'http://localhost:5000/api',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(\n  (config) => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor to handle errors\napi.interceptors.response.use(\n  (response) => {\n    return response;\n  },\n  (error) => {\n    // Handle authentication errors\n    if (error.response?.status === 401) {\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      window.location.href = '/login';\n    }\n    \n    // Handle other errors\n    if (error.response?.data?.message) {\n      console.error('API Error:', error.response.data.message);\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// Auth API\nexport const authAPI = {\n  login: (email, password) => api.post('/auth/login', { email, password }),\n  register: (userData) => api.post('/auth/register', userData),\n  getMe: () => api.get('/auth/me'),\n  updateProfile: (profileData) => api.put('/auth/me', profileData),\n  changePassword: (currentPassword, newPassword) => \n    api.put('/auth/change-password', { currentPassword, newPassword }),\n  refreshToken: () => api.post('/auth/refresh'),\n  logout: () => api.post('/auth/logout'),\n  forgotPassword: (email) => api.post('/auth/forgot-password', { email }),\n  resetPassword: (resetToken, newPassword) => \n    api.post('/auth/reset-password', { resetToken, newPassword }),\n};\n\n// Equipment API\nexport const equipmentAPI = {\n  getAll: (params) => api.get('/equipment', { params }),\n  getById: (id) => api.get(`/equipment/${id}`),\n  getByQR: (qrCode) => api.get(`/equipment/qr/${qrCode}`),\n  create: (equipmentData) => api.post('/equipment', equipmentData),\n  update: (id, equipmentData) => api.put(`/equipment/${id}`, equipmentData),\n  delete: (id) => api.delete(`/equipment/${id}`),\n  updateStatus: (id, status) => api.patch(`/equipment/${id}/status`, { status }),\n  addMaintenance: (id, maintenanceData) => \n    api.post(`/equipment/${id}/maintenance`, maintenanceData),\n  getStats: () => api.get('/equipment/stats/overview'),\n  generateQR: (id) => api.get(`/equipment/${id}/qr`),\n};\n\n// Booking API\nexport const bookingAPI = {\n  getAll: (params) => api.get('/bookings', { params }),\n  getById: (id) => api.get(`/bookings/${id}`),\n  create: (bookingData) => api.post('/bookings', bookingData),\n  update: (id, bookingData) => api.put(`/bookings/${id}`, bookingData),\n  delete: (id) => api.delete(`/bookings/${id}`),\n  checkOut: (id) => api.post(`/bookings/${id}/checkout`),\n  checkIn: (id, checkInData) => api.post(`/bookings/${id}/checkin`, checkInData),\n  cancel: (id, reason) => api.post(`/bookings/${id}/cancel`, { reason }),\n  getStats: () => api.get('/bookings/stats/overview'),\n};\n\n// User API\nexport const userAPI = {\n  getAll: (params) => api.get('/users', { params }),\n  getById: (id) => api.get(`/users/${id}`),\n  create: (userData) => api.post('/users', userData),\n  update: (id, userData) => api.put(`/users/${id}`, userData),\n  delete: (id) => api.delete(`/users/${id}`),\n  updateRole: (id, role) => api.patch(`/users/${id}/role`, { role }),\n  getStats: () => api.get('/users/stats/overview'),\n};\n\n// Location API\nexport const locationAPI = {\n  getAll: (params) => api.get('/locations', { params }),\n  getById: (id) => api.get(`/locations/${id}`),\n  create: (locationData) => api.post('/locations', locationData),\n  update: (id, locationData) => api.put(`/locations/${id}`, locationData),\n  delete: (id) => api.delete(`/locations/${id}`),\n  getStats: () => api.get('/locations/stats/overview'),\n};\n\n// QR API\nexport const qrAPI = {\n  generateQR: (id) => api.get(`/qr/equipment/${id}`),\n  scanQR: (qrData) => api.post('/qr/scan', qrData),\n  bulkGenerate: (equipmentIds) => api.post('/qr/bulk-generate', { equipmentIds }),\n};\n\n// Health check\nexport const healthAPI = {\n  check: () => api.get('/health'),\n};\n\nexport default api;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}