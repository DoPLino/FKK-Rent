{"ast":null,"code":"var _jsxFileName = \"/Users/lino/Downloads/test/client/src/hooks/useAuth.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect, createContext, useContext } from 'react';\nimport { authService } from '../services/authService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    if (token && savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setLoading(false);\n  }, []);\n  const login = async credentials => {\n    try {\n      const response = await authService.login(credentials);\n      const {\n        token,\n        user: userData\n      } = response;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const register = async userData => {\n    try {\n      const response = await authService.register(userData);\n      const {\n        token,\n        user: newUser\n      } = response;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setUser(newUser);\n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n  const updateUser = userData => {\n    const updatedUser = {\n      ...user,\n      ...userData\n    };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    setUser(updatedUser);\n  };\n  const refreshToken = async () => {\n    try {\n      const response = await authService.refreshToken();\n      const {\n        token,\n        user: userData\n      } = response;\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      return response;\n    } catch (error) {\n      logout();\n      throw error;\n    }\n  };\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    refreshToken,\n    isAuthenticated: !!user\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["useState","useEffect","createContext","useContext","authService","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","loading","setLoading","token","localStorage","getItem","savedUser","JSON","parse","error","console","removeItem","login","credentials","response","userData","setItem","stringify","register","newUser","logout","updateUser","updatedUser","refreshToken","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/lino/Downloads/test/client/src/hooks/useAuth.js"],"sourcesContent":["import { useState, useEffect, createContext, useContext } from 'react';\nimport { authService } from '../services/authService';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // Check if user is already logged in\n    const token = localStorage.getItem('token');\n    const savedUser = localStorage.getItem('user');\n    \n    if (token && savedUser) {\n      try {\n        setUser(JSON.parse(savedUser));\n      } catch (error) {\n        console.error('Error parsing saved user:', error);\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    \n    setLoading(false);\n  }, []);\n\n  const login = async (credentials) => {\n    try {\n      const response = await authService.login(credentials);\n      const { token, user: userData } = response;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      \n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const register = async (userData) => {\n    try {\n      const response = await authService.register(userData);\n      const { token, user: newUser } = response;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(newUser));\n      setUser(newUser);\n      \n      return response;\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setUser(null);\n  };\n\n  const updateUser = (userData) => {\n    const updatedUser = { ...user, ...userData };\n    localStorage.setItem('user', JSON.stringify(updatedUser));\n    setUser(updatedUser);\n  };\n\n  const refreshToken = async () => {\n    try {\n      const response = await authService.refreshToken();\n      const { token, user: userData } = response;\n      \n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(userData));\n      setUser(userData);\n      \n      return response;\n    } catch (error) {\n      logout();\n      throw error;\n    }\n  };\n\n  const value = {\n    user,\n    loading,\n    login,\n    register,\n    logout,\n    updateUser,\n    refreshToken,\n    isAuthenticated: !!user\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n"],"mappings":";;;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACtE,SAASC,WAAW,QAAQ,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMM,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGP,UAAU,CAACI,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C,MAAMC,SAAS,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE9C,IAAIF,KAAK,IAAIG,SAAS,EAAE;MACtB,IAAI;QACFN,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,SAAS,CAAC,CAAC;MAChC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDL,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;IAEAT,UAAU,CAAC,KAAK,CAAC;EACnB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM1B,WAAW,CAACwB,KAAK,CAACC,WAAW,CAAC;MACrD,MAAM;QAAEV,KAAK;QAAEJ,IAAI,EAAEgB;MAAS,CAAC,GAAGD,QAAQ;MAE1CV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;MACpCC,YAAY,CAACY,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACF,QAAQ,CAAC,CAAC;MACtDf,OAAO,CAACe,QAAQ,CAAC;MAEjB,OAAOD,QAAQ;IACjB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMS,QAAQ,GAAG,MAAOH,QAAQ,IAAK;IACnC,IAAI;MACF,MAAMD,QAAQ,GAAG,MAAM1B,WAAW,CAAC8B,QAAQ,CAACH,QAAQ,CAAC;MACrD,MAAM;QAAEZ,KAAK;QAAEJ,IAAI,EAAEoB;MAAQ,CAAC,GAAGL,QAAQ;MAEzCV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;MACpCC,YAAY,CAACY,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACE,OAAO,CAAC,CAAC;MACrDnB,OAAO,CAACmB,OAAO,CAAC;MAEhB,OAAOL,QAAQ;IACjB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,MAAMA,KAAK;IACb;EACF,CAAC;EAED,MAAMW,MAAM,GAAGA,CAAA,KAAM;IACnBhB,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;IAC/BX,OAAO,CAAC,IAAI,CAAC;EACf,CAAC;EAED,MAAMqB,UAAU,GAAIN,QAAQ,IAAK;IAC/B,MAAMO,WAAW,GAAG;MAAE,GAAGvB,IAAI;MAAE,GAAGgB;IAAS,CAAC;IAC5CX,YAAY,CAACY,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACK,WAAW,CAAC,CAAC;IACzDtB,OAAO,CAACsB,WAAW,CAAC;EACtB,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI;MACF,MAAMT,QAAQ,GAAG,MAAM1B,WAAW,CAACmC,YAAY,CAAC,CAAC;MACjD,MAAM;QAAEpB,KAAK;QAAEJ,IAAI,EAAEgB;MAAS,CAAC,GAAGD,QAAQ;MAE1CV,YAAY,CAACY,OAAO,CAAC,OAAO,EAAEb,KAAK,CAAC;MACpCC,YAAY,CAACY,OAAO,CAAC,MAAM,EAAET,IAAI,CAACU,SAAS,CAACF,QAAQ,CAAC,CAAC;MACtDf,OAAO,CAACe,QAAQ,CAAC;MAEjB,OAAOD,QAAQ;IACjB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACdW,MAAM,CAAC,CAAC;MACR,MAAMX,KAAK;IACb;EACF,CAAC;EAED,MAAMe,KAAK,GAAG;IACZzB,IAAI;IACJE,OAAO;IACPW,KAAK;IACLM,QAAQ;IACRE,MAAM;IACNC,UAAU;IACVE,YAAY;IACZE,eAAe,EAAE,CAAC,CAAC1B;EACrB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAACmC,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAA3B,QAAA,EAChCA;EAAQ;IAAA8B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAChC,GAAA,CAhGWF,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}