{"ast":null,"code":"import api from './api';\nclass AIService {\n  // Smart Equipment Investment Suggestions\n  async getInvestmentSuggestions(filters = {}) {\n    try {\n      const response = await api.post('/ai/investment-suggestions', filters);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        insights: response.data.insights || []\n      };\n    } catch (error) {\n      var _error$response, _error$response$data, _error$response2, _error$response2$data;\n      console.error('Error fetching investment suggestions:', error);\n      return {\n        success: false,\n        message: ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to get investment suggestions',\n        error: ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message\n      };\n    }\n  }\n\n  // Predictive Maintenance Analysis\n  async getMaintenancePredictions(equipmentId = null) {\n    try {\n      const params = equipmentId ? {\n        equipmentId\n      } : {};\n      const response = await api.get('/ai/maintenance-predictions', {\n        params\n      });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        predictions: response.data.predictions || [],\n        recommendations: response.data.recommendations || []\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data, _error$response4, _error$response4$data;\n      console.error('Error fetching maintenance predictions:', error);\n      return {\n        success: false,\n        message: ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to get maintenance predictions',\n        error: ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.error) || error.message\n      };\n    }\n  }\n\n  // Smart Inventory Optimization\n  async getInventoryOptimization() {\n    try {\n      const response = await api.get('/ai/inventory-optimization');\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        recommendations: response.data.recommendations || [],\n        savings: response.data.savings || {}\n      };\n    } catch (error) {\n      var _error$response5, _error$response5$data, _error$response6, _error$response6$data;\n      console.error('Error fetching inventory optimization:', error);\n      return {\n        success: false,\n        message: ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to get inventory optimization',\n        error: ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : (_error$response6$data = _error$response6.data) === null || _error$response6$data === void 0 ? void 0 : _error$response6$data.error) || error.message\n      };\n    }\n  }\n\n  // Workflow Optimization Suggestions\n  async getWorkflowOptimization() {\n    try {\n      const response = await api.get('/ai/workflow-optimization');\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        suggestions: response.data.suggestions || [],\n        efficiencyGains: response.data.efficiencyGains || {}\n      };\n    } catch (error) {\n      var _error$response7, _error$response7$data, _error$response8, _error$response8$data;\n      console.error('Error fetching workflow optimization:', error);\n      return {\n        success: false,\n        message: ((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : (_error$response7$data = _error$response7.data) === null || _error$response7$data === void 0 ? void 0 : _error$response7$data.message) || 'Failed to get workflow optimization',\n        error: ((_error$response8 = error.response) === null || _error$response8 === void 0 ? void 0 : (_error$response8$data = _error$response8.data) === null || _error$response8$data === void 0 ? void 0 : _error$response8$data.error) || error.message\n      };\n    }\n  }\n\n  // Smart Booking Recommendations\n  async getBookingRecommendations(projectData) {\n    try {\n      const response = await api.post('/ai/booking-recommendations', projectData);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        recommendations: response.data.recommendations || [],\n        alternatives: response.data.alternatives || []\n      };\n    } catch (error) {\n      var _error$response9, _error$response9$data, _error$response0, _error$response0$data;\n      console.error('Error fetching booking recommendations:', error);\n      return {\n        success: false,\n        message: ((_error$response9 = error.response) === null || _error$response9 === void 0 ? void 0 : (_error$response9$data = _error$response9.data) === null || _error$response9$data === void 0 ? void 0 : _error$response9$data.message) || 'Failed to get booking recommendations',\n        error: ((_error$response0 = error.response) === null || _error$response0 === void 0 ? void 0 : (_error$response0$data = _error$response0.data) === null || _error$response0$data === void 0 ? void 0 : _error$response0$data.error) || error.message\n      };\n    }\n  }\n\n  // Equipment Performance Analytics\n  async getEquipmentPerformance(equipmentId = null, timeRange = '30d') {\n    try {\n      const params = {\n        timeRange\n      };\n      if (equipmentId) params.equipmentId = equipmentId;\n      const response = await api.get('/ai/equipment-performance', {\n        params\n      });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        metrics: response.data.metrics || {},\n        trends: response.data.trends || [],\n        insights: response.data.insights || []\n      };\n    } catch (error) {\n      var _error$response1, _error$response1$data, _error$response10, _error$response10$dat;\n      console.error('Error fetching equipment performance:', error);\n      return {\n        success: false,\n        message: ((_error$response1 = error.response) === null || _error$response1 === void 0 ? void 0 : (_error$response1$data = _error$response1.data) === null || _error$response1$data === void 0 ? void 0 : _error$response1$data.message) || 'Failed to get equipment performance',\n        error: ((_error$response10 = error.response) === null || _error$response10 === void 0 ? void 0 : (_error$response10$dat = _error$response10.data) === null || _error$response10$dat === void 0 ? void 0 : _error$response10$dat.error) || error.message\n      };\n    }\n  }\n\n  // Smart Cost Analysis\n  async getCostAnalysis(filters = {}) {\n    try {\n      const response = await api.post('/ai/cost-analysis', filters);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        breakdown: response.data.breakdown || {},\n        savings: response.data.savings || {},\n        recommendations: response.data.recommendations || []\n      };\n    } catch (error) {\n      var _error$response11, _error$response11$dat, _error$response12, _error$response12$dat;\n      console.error('Error fetching cost analysis:', error);\n      return {\n        success: false,\n        message: ((_error$response11 = error.response) === null || _error$response11 === void 0 ? void 0 : (_error$response11$dat = _error$response11.data) === null || _error$response11$dat === void 0 ? void 0 : _error$response11$dat.message) || 'Failed to get cost analysis',\n        error: ((_error$response12 = error.response) === null || _error$response12 === void 0 ? void 0 : (_error$response12$dat = _error$response12.data) === null || _error$response12$dat === void 0 ? void 0 : _error$response12$dat.error) || error.message\n      };\n    }\n  }\n\n  // Predictive Demand Forecasting\n  async getDemandForecast(timeRange = '90d') {\n    try {\n      const response = await api.get('/ai/demand-forecast', {\n        params: {\n          timeRange\n        }\n      });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        forecast: response.data.forecast || [],\n        confidence: response.data.confidence || {},\n        factors: response.data.factors || []\n      };\n    } catch (error) {\n      var _error$response13, _error$response13$dat, _error$response14, _error$response14$dat;\n      console.error('Error fetching demand forecast:', error);\n      return {\n        success: false,\n        message: ((_error$response13 = error.response) === null || _error$response13 === void 0 ? void 0 : (_error$response13$dat = _error$response13.data) === null || _error$response13$dat === void 0 ? void 0 : _error$response13$dat.message) || 'Failed to get demand forecast',\n        error: ((_error$response14 = error.response) === null || _error$response14 === void 0 ? void 0 : (_error$response14$dat = _error$response14.data) === null || _error$response14$dat === void 0 ? void 0 : _error$response14$dat.error) || error.message\n      };\n    }\n  }\n\n  // Smart Equipment Pairing\n  async getEquipmentPairing(primaryEquipmentId) {\n    try {\n      const response = await api.get(`/ai/equipment-pairing/${primaryEquipmentId}`);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        pairings: response.data.pairings || [],\n        compatibility: response.data.compatibility || {},\n        suggestions: response.data.suggestions || []\n      };\n    } catch (error) {\n      var _error$response15, _error$response15$dat, _error$response16, _error$response16$dat;\n      console.error('Error fetching equipment pairing:', error);\n      return {\n        success: false,\n        message: ((_error$response15 = error.response) === null || _error$response15 === void 0 ? void 0 : (_error$response15$dat = _error$response15.data) === null || _error$response15$dat === void 0 ? void 0 : _error$response15$dat.message) || 'Failed to get equipment pairing',\n        error: ((_error$response16 = error.response) === null || _error$response16 === void 0 ? void 0 : (_error$response16$dat = _error$response16.data) === null || _error$response16$dat === void 0 ? void 0 : _error$response16$dat.error) || error.message\n      };\n    }\n  }\n\n  // AI-Powered Search & Discovery\n  async smartSearch(query, context = {}) {\n    try {\n      const response = await api.post('/ai/smart-search', {\n        query,\n        context\n      });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        results: response.data.results || [],\n        suggestions: response.data.suggestions || [],\n        related: response.data.related || []\n      };\n    } catch (error) {\n      var _error$response17, _error$response17$dat, _error$response18, _error$response18$dat;\n      console.error('Error performing smart search:', error);\n      return {\n        success: false,\n        message: ((_error$response17 = error.response) === null || _error$response17 === void 0 ? void 0 : (_error$response17$dat = _error$response17.data) === null || _error$response17$dat === void 0 ? void 0 : _error$response17$dat.message) || 'Failed to perform smart search',\n        error: ((_error$response18 = error.response) === null || _error$response18 === void 0 ? void 0 : (_error$response18$dat = _error$response18.data) === null || _error$response18$dat === void 0 ? void 0 : _error$response18$dat.error) || error.message\n      };\n    }\n  }\n\n  // Automated Report Generation\n  async generateReport(reportType, parameters = {}) {\n    try {\n      const response = await api.post('/ai/generate-report', {\n        reportType,\n        parameters\n      });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        report: response.data.report || {},\n        insights: response.data.insights || [],\n        recommendations: response.data.recommendations || []\n      };\n    } catch (error) {\n      var _error$response19, _error$response19$dat, _error$response20, _error$response20$dat;\n      console.error('Error generating report:', error);\n      return {\n        success: false,\n        message: ((_error$response19 = error.response) === null || _error$response19 === void 0 ? void 0 : (_error$response19$dat = _error$response19.data) === null || _error$response19$dat === void 0 ? void 0 : _error$response19$dat.message) || 'Failed to generate report',\n        error: ((_error$response20 = error.response) === null || _error$response20 === void 0 ? void 0 : (_error$response20$dat = _error$response20.data) === null || _error$response20$dat === void 0 ? void 0 : _error$response20$dat.error) || error.message\n      };\n    }\n  }\n\n  // Smart Notification System\n  async getSmartNotifications() {\n    try {\n      const response = await api.get('/ai/smart-notifications');\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        notifications: response.data.notifications || [],\n        priorities: response.data.priorities || {},\n        actions: response.data.actions || []\n      };\n    } catch (error) {\n      var _error$response21, _error$response21$dat, _error$response22, _error$response22$dat;\n      console.error('Error fetching smart notifications:', error);\n      return {\n        success: false,\n        message: ((_error$response21 = error.response) === null || _error$response21 === void 0 ? void 0 : (_error$response21$dat = _error$response21.data) === null || _error$response21$dat === void 0 ? void 0 : _error$response21$dat.message) || 'Failed to get smart notifications',\n        error: ((_error$response22 = error.response) === null || _error$response22 === void 0 ? void 0 : (_error$response22$dat = _error$response22.data) === null || _error$response22$dat === void 0 ? void 0 : _error$response22$dat.error) || error.message\n      };\n    }\n  }\n\n  // Equipment Health Score\n  async getEquipmentHealthScore(equipmentId) {\n    try {\n      const response = await api.get(`/ai/equipment-health/${equipmentId}`);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        healthScore: response.data.healthScore || 0,\n        factors: response.data.factors || [],\n        recommendations: response.data.recommendations || []\n      };\n    } catch (error) {\n      var _error$response23, _error$response23$dat, _error$response24, _error$response24$dat;\n      console.error('Error fetching equipment health score:', error);\n      return {\n        success: false,\n        message: ((_error$response23 = error.response) === null || _error$response23 === void 0 ? void 0 : (_error$response23$dat = _error$response23.data) === null || _error$response23$dat === void 0 ? void 0 : _error$response23$dat.message) || 'Failed to get equipment health score',\n        error: ((_error$response24 = error.response) === null || _error$response24 === void 0 ? void 0 : (_error$response24$dat = _error$response24.data) === null || _error$response24$dat === void 0 ? void 0 : _error$response24$dat.error) || error.message\n      };\n    }\n  }\n\n  // Smart Scheduling Optimization\n  async optimizeSchedule(scheduleData) {\n    try {\n      const response = await api.post('/ai/optimize-schedule', scheduleData);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        optimizedSchedule: response.data.optimizedSchedule || [],\n        conflicts: response.data.conflicts || [],\n        suggestions: response.data.suggestions || []\n      };\n    } catch (error) {\n      var _error$response25, _error$response25$dat, _error$response26, _error$response26$dat;\n      console.error('Error optimizing schedule:', error);\n      return {\n        success: false,\n        message: ((_error$response25 = error.response) === null || _error$response25 === void 0 ? void 0 : (_error$response25$dat = _error$response25.data) === null || _error$response25$dat === void 0 ? void 0 : _error$response25$dat.message) || 'Failed to optimize schedule',\n        error: ((_error$response26 = error.response) === null || _error$response26 === void 0 ? void 0 : (_error$response26$dat = _error$response26.data) === null || _error$response26$dat === void 0 ? void 0 : _error$response26$dat.error) || error.message\n      };\n    }\n  }\n\n  // Equipment Lifecycle Analysis\n  async getLifecycleAnalysis(equipmentId = null) {\n    try {\n      const params = equipmentId ? {\n        equipmentId\n      } : {};\n      const response = await api.get('/ai/lifecycle-analysis', {\n        params\n      });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        lifecycle: response.data.lifecycle || {},\n        recommendations: response.data.recommendations || [],\n        replacement: response.data.replacement || {}\n      };\n    } catch (error) {\n      var _error$response27, _error$response27$dat, _error$response28, _error$response28$dat;\n      console.error('Error fetching lifecycle analysis:', error);\n      return {\n        success: false,\n        message: ((_error$response27 = error.response) === null || _error$response27 === void 0 ? void 0 : (_error$response27$dat = _error$response27.data) === null || _error$response27$dat === void 0 ? void 0 : _error$response27$dat.message) || 'Failed to get lifecycle analysis',\n        error: ((_error$response28 = error.response) === null || _error$response28 === void 0 ? void 0 : (_error$response28$dat = _error$response28.data) === null || _error$response28$dat === void 0 ? void 0 : _error$response28$dat.error) || error.message\n      };\n    }\n  }\n}\nexport const aiService = new AIService();","map":{"version":3,"names":["api","AIService","getInvestmentSuggestions","filters","response","post","success","data","insights","error","_error$response","_error$response$data","_error$response2","_error$response2$data","console","message","getMaintenancePredictions","equipmentId","params","get","predictions","recommendations","_error$response3","_error$response3$data","_error$response4","_error$response4$data","getInventoryOptimization","savings","_error$response5","_error$response5$data","_error$response6","_error$response6$data","getWorkflowOptimization","suggestions","efficiencyGains","_error$response7","_error$response7$data","_error$response8","_error$response8$data","getBookingRecommendations","projectData","alternatives","_error$response9","_error$response9$data","_error$response0","_error$response0$data","getEquipmentPerformance","timeRange","metrics","trends","_error$response1","_error$response1$data","_error$response10","_error$response10$dat","getCostAnalysis","breakdown","_error$response11","_error$response11$dat","_error$response12","_error$response12$dat","getDemandForecast","forecast","confidence","factors","_error$response13","_error$response13$dat","_error$response14","_error$response14$dat","getEquipmentPairing","primaryEquipmentId","pairings","compatibility","_error$response15","_error$response15$dat","_error$response16","_error$response16$dat","smartSearch","query","context","results","related","_error$response17","_error$response17$dat","_error$response18","_error$response18$dat","generateReport","reportType","parameters","report","_error$response19","_error$response19$dat","_error$response20","_error$response20$dat","getSmartNotifications","notifications","priorities","actions","_error$response21","_error$response21$dat","_error$response22","_error$response22$dat","getEquipmentHealthScore","healthScore","_error$response23","_error$response23$dat","_error$response24","_error$response24$dat","optimizeSchedule","scheduleData","optimizedSchedule","conflicts","_error$response25","_error$response25$dat","_error$response26","_error$response26$dat","getLifecycleAnalysis","lifecycle","replacement","_error$response27","_error$response27$dat","_error$response28","_error$response28$dat","aiService"],"sources":["/Users/lino/Downloads/test/client/src/services/aiService.js"],"sourcesContent":["import api from './api';\n\nclass AIService {\n  // Smart Equipment Investment Suggestions\n  async getInvestmentSuggestions(filters = {}) {\n    try {\n      const response = await api.post('/ai/investment-suggestions', filters);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        insights: response.data.insights || []\n      };\n    } catch (error) {\n      console.error('Error fetching investment suggestions:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get investment suggestions',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Predictive Maintenance Analysis\n  async getMaintenancePredictions(equipmentId = null) {\n    try {\n      const params = equipmentId ? { equipmentId } : {};\n      const response = await api.get('/ai/maintenance-predictions', { params });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        predictions: response.data.predictions || [],\n        recommendations: response.data.recommendations || []\n      };\n    } catch (error) {\n      console.error('Error fetching maintenance predictions:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get maintenance predictions',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Smart Inventory Optimization\n  async getInventoryOptimization() {\n    try {\n      const response = await api.get('/ai/inventory-optimization');\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        recommendations: response.data.recommendations || [],\n        savings: response.data.savings || {}\n      };\n    } catch (error) {\n      console.error('Error fetching inventory optimization:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get inventory optimization',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Workflow Optimization Suggestions\n  async getWorkflowOptimization() {\n    try {\n      const response = await api.get('/ai/workflow-optimization');\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        suggestions: response.data.suggestions || [],\n        efficiencyGains: response.data.efficiencyGains || {}\n      };\n    } catch (error) {\n      console.error('Error fetching workflow optimization:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get workflow optimization',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Smart Booking Recommendations\n  async getBookingRecommendations(projectData) {\n    try {\n      const response = await api.post('/ai/booking-recommendations', projectData);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        recommendations: response.data.recommendations || [],\n        alternatives: response.data.alternatives || []\n      };\n    } catch (error) {\n      console.error('Error fetching booking recommendations:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get booking recommendations',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Equipment Performance Analytics\n  async getEquipmentPerformance(equipmentId = null, timeRange = '30d') {\n    try {\n      const params = { timeRange };\n      if (equipmentId) params.equipmentId = equipmentId;\n      \n      const response = await api.get('/ai/equipment-performance', { params });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        metrics: response.data.metrics || {},\n        trends: response.data.trends || [],\n        insights: response.data.insights || []\n      };\n    } catch (error) {\n      console.error('Error fetching equipment performance:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get equipment performance',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Smart Cost Analysis\n  async getCostAnalysis(filters = {}) {\n    try {\n      const response = await api.post('/ai/cost-analysis', filters);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        breakdown: response.data.breakdown || {},\n        savings: response.data.savings || {},\n        recommendations: response.data.recommendations || []\n      };\n    } catch (error) {\n      console.error('Error fetching cost analysis:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get cost analysis',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Predictive Demand Forecasting\n  async getDemandForecast(timeRange = '90d') {\n    try {\n      const response = await api.get('/ai/demand-forecast', { params: { timeRange } });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        forecast: response.data.forecast || [],\n        confidence: response.data.confidence || {},\n        factors: response.data.factors || []\n      };\n    } catch (error) {\n      console.error('Error fetching demand forecast:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get demand forecast',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Smart Equipment Pairing\n  async getEquipmentPairing(primaryEquipmentId) {\n    try {\n      const response = await api.get(`/ai/equipment-pairing/${primaryEquipmentId}`);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        pairings: response.data.pairings || [],\n        compatibility: response.data.compatibility || {},\n        suggestions: response.data.suggestions || []\n      };\n    } catch (error) {\n      console.error('Error fetching equipment pairing:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get equipment pairing',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // AI-Powered Search & Discovery\n  async smartSearch(query, context = {}) {\n    try {\n      const response = await api.post('/ai/smart-search', { query, context });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        results: response.data.results || [],\n        suggestions: response.data.suggestions || [],\n        related: response.data.related || []\n      };\n    } catch (error) {\n      console.error('Error performing smart search:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to perform smart search',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Automated Report Generation\n  async generateReport(reportType, parameters = {}) {\n    try {\n      const response = await api.post('/ai/generate-report', { reportType, parameters });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        report: response.data.report || {},\n        insights: response.data.insights || [],\n        recommendations: response.data.recommendations || []\n      };\n    } catch (error) {\n      console.error('Error generating report:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to generate report',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Smart Notification System\n  async getSmartNotifications() {\n    try {\n      const response = await api.get('/ai/smart-notifications');\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        notifications: response.data.notifications || [],\n        priorities: response.data.priorities || {},\n        actions: response.data.actions || []\n      };\n    } catch (error) {\n      console.error('Error fetching smart notifications:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get smart notifications',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Equipment Health Score\n  async getEquipmentHealthScore(equipmentId) {\n    try {\n      const response = await api.get(`/ai/equipment-health/${equipmentId}`);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        healthScore: response.data.healthScore || 0,\n        factors: response.data.factors || [],\n        recommendations: response.data.recommendations || []\n      };\n    } catch (error) {\n      console.error('Error fetching equipment health score:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get equipment health score',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Smart Scheduling Optimization\n  async optimizeSchedule(scheduleData) {\n    try {\n      const response = await api.post('/ai/optimize-schedule', scheduleData);\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        optimizedSchedule: response.data.optimizedSchedule || [],\n        conflicts: response.data.conflicts || [],\n        suggestions: response.data.suggestions || []\n      };\n    } catch (error) {\n      console.error('Error optimizing schedule:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to optimize schedule',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n\n  // Equipment Lifecycle Analysis\n  async getLifecycleAnalysis(equipmentId = null) {\n    try {\n      const params = equipmentId ? { equipmentId } : {};\n      const response = await api.get('/ai/lifecycle-analysis', { params });\n      return {\n        success: true,\n        data: response.data.data || response.data,\n        lifecycle: response.data.lifecycle || {},\n        recommendations: response.data.recommendations || [],\n        replacement: response.data.replacement || {}\n      };\n    } catch (error) {\n      console.error('Error fetching lifecycle analysis:', error);\n      return {\n        success: false,\n        message: error.response?.data?.message || 'Failed to get lifecycle analysis',\n        error: error.response?.data?.error || error.message\n      };\n    }\n  }\n}\n\nexport const aiService = new AIService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}